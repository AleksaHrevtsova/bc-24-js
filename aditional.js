"use strict";

// 1
// Объяви две переменные хранящие имя пользователя и сообщение приветствия: userName и greeting
// Переменная с именем пользователя должна принимать данные через окно ввода.
// Используя шаблонную строку и интерполяцию выведи в консоль информацию  товаре, получится: 'Имя пользователя, приветствие'

// 2
// ============== 1 ====================================

// объяви три переменные с именами var1, var2 и var3 соответственно

// присвой им значения: 1, 0, true

// выведи в консоль результаты сравнения:

// var1 > var2

// var1 == var3

// var1 === var3

// var1 != var3

// var2 != var3

// var1 > var2 == var3

// var1 > var2 > var3

// напиши в комментарии после команды console.log, ответ из консоли

// объясни почему получаются такие ответы



// ============== 2 ====================================

// объяви переменную val

// выведи ее в консоль

// присваивай ей следующие значения: "River", "Mountain", 232, true, null,

// проверь на число каждое присвоенное значение и узнай тип данных, укажи результат в комментарий после сonsole.log



// ============== 3 ====================================

// объяви две переменные alfa и beta со значениями 0.2 и 0.4

// запиши результат суммы этих переменных так, чтобы получилось 0.6 в переменную result

// выведи результат в консоль



// ============== 4 ====================================

// объяви переменную tetra

// присвой ей значения: 12px, 13.34em,

// выведи результат в консоль и укажи результат в комментарий после console.log



// ============== 5 ====================================

// выведи в консоль наибольшее и наименьшее число из указанных (2, 34, 99, 3, 22, 36, 733, 18)



// ============== 6* ===================================

// объяви переменную random

// пусть она принимает рандомное целое число от 3 до 19 включительно

// выведи результат в консоль

// 3
// ============== 1 ====================================

// Создай массив fruits с элементами: яблоки, бананы, апельсины.

// Выведи массив в консоль

// Выведи в консоль элемент массива с индексом 1

// Измени значение этого элемента на киви

// Выведи массив в консоль и убедись, что элемент изменился

// Добавь следующими после элемента "апельсины", такие элементы: "груши", "виноград", "персики"

// Выведи массив в консоль и убедись, что элементы добавлены



// ============== 2 ====================================

// Создай массив test1, который содержит результаты тестов студентов:

// 4, 12, 6, 16, 13, 8, 13, 4, 15, 11, 14, 10, 15, 12

// С помощью цикла со счетчиком for выведи в консоль только те значения, которые могут быть зачтены, т.е. они должны быть больше 12, это значение должно храниться в переменной score1



// ============== 3 ====================================

// Создай массив test2, который содержит результаты тестов студентов:

// 17, 13, 4, 15, 10, 12, 16, 21, 13, 8, 14, 18, 15, 20

// С помощью цикла со счетчиком for выведи в консоль только те значения, которые могут быть зачтены, т.е. они должны быть больше 15, это значение должно храниться в переменной score2



// ============== 4 ====================================

// Создай массив test3, который содержит результаты тестов студентов:

// 20, 12, 16, 22, 13, 8, 13, 4, 15, 10, 14, 18, 15, 22

// С помощью цикла со счетчиком for выведи в консоль только те значения, которые могут быть зачтены, т.е. они должны быть больше 16, это значение должно храниться в переменной score3



// ============== 5 ====================================

// Создай многомерный массив tests, который содержит 3 вложенных массива, с результатами трех тестов студентов:

// первый: 4, 12, 6, 16, 13, 8, 13, 4, 15, 11, 14, 10, 15, 12

// второй: 17, 13, 4, 15, 10, 12, 16, 21, 13, 8, 14, 18, 15, 20

// третий: 20, 12, 16, 22, 13, 8, 13, 4, 15, 10, 14, 18, 15, 22

// Выведи в консоль все три вложенных массива с помощью цикла for



// 4
// ============== 1 ===============================================

// Создай массив authors с именами авторов:

// William Shakespeare, Guy de Maupassant, Dante Alighieri, Mikhail Bulgakov, Albert Camus, Erich Maria Remarque

// С помощью методов массива, добавь в конец массива authors три элемента со значениями:

// Honore de Balzac, Miguel de Cervantes, Anton Chekhov

// а в начало массива, три элемента со значениями:

// Charles Dickens, Edgar Allan Poe, Gabriel Garcia Marquez

// Выведи обновленный массив в консоль. В комментарии после команды консоль укажи количество элементов измененного массива



// ============== 2 ===============================================

// Создай массив scores с элементами:

// 12, 32, 15, 17, 3, 4, 98, 67, 532, 611, 7, 100, 42

// с помощью методов массива shift() и pop(), удали первые два и последние три элемента

// Выведи результат в консоль



// ============== 3 ===============================================

// Создай массив results с элементами:

// 12, 32, 15, 17, 3, 4, 98, 67, 532, 611, 7, 100, 42

// с помощью метода splice(), удали первые два и последние три элемента, записав удаленные элементы

// в отдельные массивы removeFromStart и removeFromEnd

// Выведи в консоль все массивы



// ============== 4 ===============================================

// Создай массив partOfResults и скопируй в него элементы от 3 до 532 включительно

// из измененного массива results из задания 3 (т.е. все задание 3 и массив results должны быть раскомментированы)



// ============== 5 ===============================================

// Создай массив doubleResults и скопируй в него все элементы из измененного массива results из задания 3



// ============== 6 ===============================================

// Перебери массив doubleResults из задания 5

// Четные числа из массива запиши в новый массив evenResults, а

// Нечетные - в oddResults

// В обратной последовательности в обоих случаях

// Выведи в консоль массивы evenResults и oddResults



// ============== 7 ===============================================

// Объедините массивы oddResults и evenResults из задания 6, записав их в новый массив AllResults

// Перебери новый массив AllResults и выбери только те элементы массива, которые содержат 1 и запиши эти элементы в новый массив includesOne

// "обрати внимание, что массив includesOne должен содержать элемента с типом number, а не string!

// 5
// ============== 1 ===========================

// Напиши функцию toPassTests как FUNCTION EXPRESSION

// (функциональное выражение через переменную)

// и как ARROW FUNCTION (стрелочная функция),

// которая выводит пользователю всплывающее окно с сообщением

// Прежде, чем выполнить это задание у тебя должно быть сдано пять тестов!

// и вызови эту функцию

// убедись, что функция выполнилась при любом ее выражении



// FUNCTION EXPRESSION

// тут объяви функцию как FUNCTION EXPRESSION



// ARROW FUNCTION

// тут объяви функцию как ARROW FUNCTION



// вызов функции

// тут вызывай функцию



// ============== 2 ===========================

// Напиши функцию checkAge как FUNCTION EXPRESSION

// (функциональное выражение через переменную)

// и как ARROW FUNCTION (стрелочная функция),

// которая проверяет значение возраста, которое пользователь ввел в модальное окно

// и выводит пользователю всплывающее окно с сообщением

// если возраст равен или более 18, то - Here you are! You are got access!

// в остальных случаях - Sorry, you can't to get access

// и вызови эту функцию

// убедись, что функция выполнилась при любом ее выражении

// FUNCTION EXPRESSION

// тут объяви функцию как FUNCTION EXPRESSION



// ARROW FUNCTION

// тут объяви функцию как ARROW FUNCTION



// вызов функции

// тут вызывай функцию



// ============== 3 ===========================

// Напиши скрипт подсчета стоимости гравировки украшений.

// Для этого создай функцию toGetCost(message, pricePerWord)

// как FUNCTION EXPRESSION и как ARROW FUNCTION

// принимающую строку (в строке будут только слова и пробелы) и цену гравировки

// одного слова, и возвращающую цену гравировки всех слов в строке.

// и вызови эту функцию

// убедись, что функция выполнилась при любом ее выражении



// FUNCTION EXPRESSION

// тут объяви функцию как FUNCTION EXPRESSION



// ARROW FUNCTION

// тут объяви функцию как ARROW FUNCTION



// вызов функции

// используй эти консоли для проверки своего кода



// console.log(toGetCost("To be, or not to be, that is the question", 10)); // 100

// console.log(toGetCost("Whether 'tis nobler in the mind to suffer", 20)); // 160

// console.log(toGetCost("The slings and arrows of outrageous fortune,", 40)); // 280

// console.log(toGetCost("Or to take arms against a sea of troubles", 20)); // 180



// ============== 4 ===========================

// Напиши функцию logItems(array), которая получает массив и использует цикл for,

// который для каждого элемента массива будет выводить в консоль сообщение

// в формате [номер элемента] - [значение элемента].

// Нумерация должна начинаться с 1. К примеру для первого

// элемента массива ['Mango', 'Banana', 'Ajax']

// с индексом 0 будет выведено '1 - Mango',

// а для индекса 2 выведет '3 - Ajax'.

// const array = ['Mango', 'Banana', 'Ajax'];



// // FUNCTION EXPRESSION



// Вызовы функции для проверки кода

logItems([

  "Wolverine",

  "Thor",

  "Iron Man",

  "Deadpool",

  "Nick Fury",

  "Colossus"

  ]);

  logItems([10, 20, 30, 40, 50, 60, 70, 80, 90, 100]);



  // ============== 5 ===========================

  // Напиши функцию checkTheWord(message) как FUNCTION EXPRESSION и как ARROW FUNCTION,

  // принимающую 1 параметр message - строку.

  // Функция проверяет ее на содержание слов lose и not. Если нашли запрещенное слово

  // то функция возвращает true, если запрещенных слов нет функция возвращает false.

  // Слова в строке могут быть в произвольном регистре.



  // FUNCTION EXPRESSION

  // тут объяви функцию как FUNCTION EXPRESSION



  // ARROW FUNCTION

  // тут объяви функцию как ARROW FUNCTION



  // вызов функции

  // используй эти консоли для проверки своего кода

  console.log(checkTheWord("Than fly to others that we know not of?")); // true

  console.log(checkTheWord("Thus conscience does make cowards of us all")); // false

  console.log(checkTheWord("And enterprises of great pitch and moment")); // false

  console.log(checkTheWord("And lose the name of action")); // true



  // ============== 6 ===========================

  // Напиши функцию countTestsScore() как FUNCTION EXPRESSION,

  // принимающую при вызове все аргументы в виде псевдомассива arguments,

  // Функция суммирует все полученные аргументы, независимо от их количества при вызове.

  // в переменную totalSum и выводит это значение в консоль



  // FUNCTION EXPRESSION

  // тут объяви функцию как FUNCTION EXPRESSION



  // Вызовы функции для проверки кода

  countTestsScore(16, 22, 23); // укажи результат

  countTestsScore(15, 20, 22, 20); // укажи результат

  countTestsScore(14, 19, 21, 20, 23); // укажи результат



  // ============== 7 ===========================

  // Напиши функцию myNewArrowFunction() как ARROW FUNCTION,

  // принимающую при вызове все аргументы с помощью ...rest ,

  // и выводит массив этих аргументов в консоль



  // ARROW FUNCTION

  // тут объяви функцию как ARROW FUNCTION



  // Вызовы функции для проверки кода

  myNewArrowFunction(1, 2, 3); // укажи результат

  myNewArrowFunction(100, 200, 300, 400, 500); // укажи результат

  myNewArrowFunction("Js", "Python", "Java", "PHP", "C++"); // укажи результат